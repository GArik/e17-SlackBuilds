#!/bin/bash

SBDIR=$(pwd)
SBPKGDIR="$SBDIR/+packages-stable-$(date +%F)"
SBLOG="$SBDIR/build-stable-$(date +%F).log"
set -o pipefail

build()
{
	echo -e "\n=== Start building $1 ($(date +%T)) ===\n" | tee -a "$SBLOG"
	cd "$1" || return 1
	"./$1.SlackBuild" || { echo "*** Error: failed to build $1" | tee -a "$SBLOG"; return 1; }
	echo "Finished building $1 ($(date +%T))" | tee -a "$SBLOG"
	cd "$SBDIR" || return 1
	if [[ $ARCH ]]; then
		upgradepkg --install-new --reinstall "$1/$1-*-$ARCH-*.t[gx]z" | tee -a "$SBLOG" || return 1
		mv $1/$1-*-$ARCH-*.t[gx]z "$SBPKGDIR" || return 1
	else
		upgradepkg --install-new --reinstall "$1/$1-*-*-*.t[gx]z" | tee -a "$SBLOG" || return 1
		mv $1/$1-*-*-*.t[gx]z "$SBPKGDIR" || return 1
	fi
}

prompt_exit()
{
	local res
	read -p "Retry, skip, exit? [r,S,e] " SBANS
	if [[ "$SBANS" == [eE] ]]; then
		exit 1
	elif [[ "$SBANS" == [rR] ]]; then
		res=0
	else
		echo -e "\n*** Skip building $1 ***\n" | tee -a "$SBLOG"
		res=1
	fi
	cd "$SBDIR" || return 1
	return $res
}

try_build()
{
	while true; do
		build "$@"
		if [[ $? == 0 ]]; then
			break
		else
			prompt_exit "$1" || break
		fi
	done
}

echo "[ E17 BUILD START $(date +%T) ]" | tee -a "$SBLOG" || exit 1
mkdir -p "$SBPKGDIR"

# EFL
try_build  eina
try_build  eet
try_build  evas
try_build  evas_generic_loaders
try_build  ecore
try_build  embryo
try_build  edje
try_build  efreet
try_build  e_dbus
try_build  eeze

# Misc. libs and apps
try_build  expedite
