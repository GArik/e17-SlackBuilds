#!/bin/sh
# http://www.enlightenment.org/

NAME=ecore
ARCH=${ARCH:-i686}
BUILD=1ga
CWD=`pwd`
TMP=${TMP:-/tmp/tgz/e17}
PKG=$TMP/package-$NAME

SOURCE=http://svn.enlightenment.org/svn/e/trunk/$NAME


CHOST=i486
LIBDIRSUFFIX=""
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O3 -march=i686 -mtune=native -pipe -fomit-frame-pointer"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -mtune=native -pipe"
  LIBDIRSUFFIX="64"
  CHOST=x86_64
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  CHOST=s390
elif [ "$ARCH" = "arm" ]; then
  SLKCFLAGS="-O2 -march=armv4 -mtune=xscale"
  CHOST=arm
elif [ "$ARCH" = "armel" ]; then
  SLKCFLAGS="-O2 -march=armv4t"
  CHOST=arm
elif [ "$ARCH" = "native" ]; then
  SLKCFLAGS="-O3 -march=native -mtune=native -pipe"
fi

if [ ! -d $TMP ]; then
 mkdir -p $TMP
fi
if [ ! -d $PKG ]; then
 mkdir -p $PKG
fi

# getting source codes
if [ ! -d $TMP/$NAME ]; then
  svn checkout $SOURCE $TMP/$NAME || exit 1
else
  cd $TMP/$NAME || exit 1
  svn up --accept theirs-conflict || exit 1
fi

# get version from svn
VERSION=`svn -q -r COMMITTED log $TMP/$NAME | grep -o '^r[0-9]\+'`
VERSION=${VERSION:-`date +%Y%m%d`}

cd $TMP

echo -e "\E[0;32m+----------------------------------+\E[0;0m"
echo -e "\E[0;32m| Start SlackBuild $NAME-$VERSION |\E[0;0m"
echo -e "\E[0;32m+----------------------------------+\E[0;0m"

cd $NAME

chown -R root:root .
find . -perm /111 -exec chmod 755 '{}' \; -o -exec chmod 644 '{}' \;

./autogen.sh
CFLAGS="$SLKCFLAGS" \
CPPFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
 --libdir=/usr/lib${LIBDIRSUFFIX} \
 --mandir=/usr/man \
 --infodir=/usr/info \
 --enable-shared \
 --disable-static \
 --build=$CHOST-slackware-linux || exit 1
make -j2 || make || exit 1
make install DESTDIR=$PKG || exit 1

mkdir -p $PKG/usr/doc/$NAME-$VERSION
cp -a AUTHORS COPYING README \
  $PKG/usr/doc/$NAME-$VERSION

cd $PKG
find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs strip -g 2> /dev/null

if [ -d $PKG/usr/man ]; then
 find $PKG/usr/man -type f -exec gzip -9 {} \;
fi
if [ -d $PKG/usr/info ]; then
 rm $PKG/usr/info/dir
 find $PKG/usr/info -type f -exec gzip -9 {} \;
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/slack-desc > $PKG/usr/doc/$NAME-$VERSION/slack-desc
cat $CWD/$NAME-svn.SlackBuild > $PKG/usr/doc/$NAME-$VERSION/$NAME-svn.SlackBuild

requiredbuilder -v -y -s $CWD $PKG
if [ -x /bin/xz ]; then
 makepkg -l y -c n $CWD/$NAME-$VERSION-$ARCH-$BUILD.txz
else
 makepkg -l y -c n $CWD/$NAME-$VERSION-$ARCH-$BUILD.tgz
fi
